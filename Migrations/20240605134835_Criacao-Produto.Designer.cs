// <auto-generated />
using System;
using Acho.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Acho.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240605134835_Criacao-Produto")]
    partial class CriacaoProduto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Acho.Models.Animais", b =>
                {
                    b.Property<int>("AnimaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnimaisId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimaisId"));

                    b.Property<string>("AnimalCor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalCor");

                    b.Property<DateTime>("AnimalData")
                        .HasColumnType("datetime2")
                        .HasColumnName("AnimalDataDesaparecimento");

                    b.Property<DateTime?>("AnimalDataEncontro")
                        .HasColumnType("datetime2")
                        .HasColumnName("AnimalDataEncontro");

                    b.Property<string>("AnimalFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalFoto");

                    b.Property<string>("AnimalNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalNome");

                    b.Property<string>("AnimalObservacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalObservacao");

                    b.Property<string>("AnimalRaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalRaca");

                    b.Property<string>("AnimalSexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalSexo");

                    b.Property<byte>("AnimalStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("AnimalStatus");

                    b.Property<string>("AnimalTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnimalTipo");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("AnimaisId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Animais");
                });

            modelBuilder.Entity("Acho.Models.Observacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ObservacaoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimaisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ObservacaoData")
                        .HasColumnType("datetime2")
                        .HasColumnName("ObservacaoData");

                    b.Property<string>("ObservacaoDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObservacaoDescricao");

                    b.Property<string>("ObservacaoLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObservacaoLocal");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimaisId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Observacoes");
                });

            modelBuilder.Entity("Acho.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UsuarioEmail");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UsuarioNome");

                    b.Property<string>("UsuarioSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UsuarioSenha");

                    b.Property<string>("UsuarioTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UsuarioTelefone");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Acho.Models.Animais", b =>
                {
                    b.HasOne("Acho.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Acho.Models.Observacoes", b =>
                {
                    b.HasOne("Acho.Models.Animais", "Animais")
                        .WithMany()
                        .HasForeignKey("AnimaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Acho.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animais");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
